---
const { 
	isALink = false,
	cssMod = '',
	text= '',
	href = '',
	alt = '',
	startIcon,
	endIcon
} = Astro.props;

let attrs = {}

if(isALink) {
	attrs = {
		'href': href,
		'alt': alt,
	}
}
---

{isALink ? (
	<a class={`button ${cssMod}`} { ...attrs }>
		{ startIcon && '← ' }{text}{ endIcon && ' →' }
	</a>
) : (
	<button class={`button ${cssMod}`}>{text}</button>
)}

<style>
	@property --gradient-button-fill {
		syntax: '<color>';
		inherits: true;
		initial-value: white;
	}
	.button {
		--bg-color: var(--color--light-blue);
		--textColor: var(--color--text);

		display: inline-flex;
		justify-content: center;
		align-items: center;
		padding: var(--space-2xs) var(--space-xs);
		border: 2px solid transparent;
		border-radius: 4px;
		background: 
			linear-gradient(var(--gradient-button-fill) 0 0) padding-box,
			linear-gradient(var(--gradient-angle), var(--gradient-stops)) border-box;
		text-decoration: none;
		transition: --gradient-button-fill .5s , color, .5s;
		color: var(--textColor);
	}

	.button:hover {
		--gradient-button-fill: transparent;
		--textColor: white;
	}
</style>         